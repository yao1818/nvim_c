
local status, symbols_outline = pcall(require, "symbols-outline")
if not status then
    vim.notify("Ê≤°ÊúâÊâæÂà∞ outline")
  return
end


symbols_outline.setup({
--local opts = {
  highlight_hovered_item = true,
  show_guides = true,
  auto_preview = false,
  position = 'right',
  relative_width = true,
  width = 18,
  auto_close = false,
  show_numbers = false,
  show_relative_numbers = false,
  show_symbol_details = true,
  preview_bg_highlight = 'Pmenu',
  autofold_depth = nil,
  auto_unfold_hover = true,
  fold_markers = { '‚ñ∂', '‚ñΩ' },--{ '‚ñ∂', '‚ñΩ' },
  wrap = false,
  keymaps = { -- These keymaps can be a string or a table for multiple keys
    close = {"<Esc>", "q"},
--    goto_location = "<Cr>",
--    focus_location = "o",
--    hover_symbol = "<C-q>",  --ÊòæÁ§∫ÂáΩÊï∞ÁªÜËäÇ
    toggle_preview = "<C-i>",
--    rename_symbol = "r",
--    code_actions = "a",
--    fold = "h",
--    unfold = "l",
    fold_all = "<c-i>w",
    unfold_all = "<c-i>e",
--    fold_reset = "R",
  },
  lsp_blacklist = {},
  symbol_blacklist = {},
  symbols = {
    File = { icon = "Ôúì", hl = "TSURI" },
    Module = { icon = "‚ñ™", hl = "TSNamespace" },
    Namespace = { icon = "Ôô©", hl = "TSNamespace" },
    Package = { icon = "Ô£ñ", hl = "TSNamespace" },
    Class = { icon = "ùìí", hl = "TSType" },
    Method = { icon = "∆í", hl = "TSMethod" },
    Property = { icon = "Óò§", hl = "TSMethod" },
    Field = { icon = "", hl = "TSField" },
    Constructor = { icon = "Óàè", hl = "TSConstructor" },
    Enum = { icon = "", hl = "TSType" },
    Interface = { icon = "Ô∞Æ", hl = "TSType" },
    Function = { icon = "{}", hl = "TSFunction" }, --‚ó¶
    Variable = { icon = "‚ó¶", hl = "TSConstant" },
    Constant = { icon = "‚ó¶", hl = "TSConstant" },
    String = { icon = "ùìê", hl = "TSString" },
    Number = { icon = "#", hl = "TSNumber" },
    Boolean = { icon = "‚ó¶", hl = "TSBoolean" },
    Array = { icon = "‚ó¶", hl = "TSConstant" },
    Object = { icon = "‚ó¶", hl = "TSType" },
    Key = { icon = "‚ó¶", hl = "TSType" },
    Null = { icon = "NULL", hl = "TSType" },
    EnumMember = { icon = "", hl = "TSField" },
    Struct = { icon = "ùì¢", hl = "TSType" },
    Event = { icon = "üó≤", hl = "TSType" },
    Operator = { icon = "+", hl = "TSOperator" },
    TypeParameter = { icon = "ùôè", hl = "TSParameter" },
--    File = { icon = "Ôúì", hl = "@text.uri" },
--    Module = { icon = "‚ñ∑", hl = "@namespace" },
--    Namespace = { icon = "‚ñ∑", hl = "@namespace" },
--    Package = { icon = "‚ñ∑", hl = "@namespace" },
--    Class = { icon = "‚ñ∑", hl = "@type" },
--    Method = { icon = "‚ñ∑", hl = "@method" },
--    Property = { icon = "‚ñ∑", hl = "@method" },
--    Field = { icon = "‚ñ∑", hl = "@field" },
--    Constructor = { icon = "‚ñ∑", hl = "@constructor" },
--    Enum = { icon = "‚ñ∑", hl = "@type" },
--    Interface = { icon = "‚ñ∑", hl = "@type" },
--    Function = { icon = "‚ñ∑", hl = "@function" },
--    Variable = { icon = "‚ñ∑", hl = "@constant" },
--    Constant = { icon = "‚ñ∑", hl = "@constant" },
--    String = { icon = "‚ñ∑", hl = "@string" },
--    Number = { icon = "‚ñ∑", hl = "@number" },
--    Boolean = { icon = "‚ñ∑", hl = "@boolean" },
--    Array = { icon = "‚ñ∑", hl = "@constant" },
--    Object = { icon = "‚ñ∑", hl = "@type" },
--    Key = { icon = "‚ñ∑", hl = "@type" },
--    Null = { icon = "‚ñ∑", hl = "@type" },
--    EnumMember = { icon = "‚ñ∑", hl = "@field" },
--    Struct = { icon = "", hl = "@type" },
--    Event = { icon = "‚ñ∑", hl = "@type" },
--    Operator = { icon = "+", hl = "@operator" },
--    TypeParameter = { icon = "‚ñ∑", hl = "@parameter" },
--    Component = { icon = "‚ñ∑", hl = "@function" },
--    Fragment = { icon = "‚ñ∑", hl = "@constant" },
  },
--}

})
